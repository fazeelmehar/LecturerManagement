// <auto-generated />
using System;
using LecturerManagement.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LecturerManagement.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LecturerManagement.Domain.Entities.Enrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<int?>("LectureId");

                    b.Property<int?>("StudentId");

                    b.HasKey("Id");

                    b.HasIndex("LectureId");

                    b.HasIndex("StudentId");

                    b.ToTable("tblEnrollment");
                });

            modelBuilder.Entity("LecturerManagement.Domain.Entities.Lecture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("DateTime");

                    b.Property<TimeSpan>("Duration");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<int?>("LectureTheatreId");

                    b.Property<int?>("SubjectId");

                    b.HasKey("Id");

                    b.HasIndex("LectureTheatreId");

                    b.HasIndex("SubjectId");

                    b.ToTable("tblLecture");
                });

            modelBuilder.Entity("LecturerManagement.Domain.Entities.LectureTheatre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("Location")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("SeatingCapacity");

                    b.HasKey("Id");

                    b.ToTable("tblLectureTheatre");
                });

            modelBuilder.Entity("LecturerManagement.Domain.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("tblStudent");
                });

            modelBuilder.Entity("LecturerManagement.Domain.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(80)");

                    b.HasKey("Id");

                    b.ToTable("tblSubject");
                });

            modelBuilder.Entity("LecturerManagement.Domain.Entities.Enrollment", b =>
                {
                    b.HasOne("LecturerManagement.Domain.Entities.Lecture", "Lecture")
                        .WithMany("Enrollments")
                        .HasForeignKey("LectureId")
                        .HasConstraintName("FK_Enrollments_Lecture_LectureId");

                    b.HasOne("LecturerManagement.Domain.Entities.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Enrollments_Student_StudentId");
                });

            modelBuilder.Entity("LecturerManagement.Domain.Entities.Lecture", b =>
                {
                    b.HasOne("LecturerManagement.Domain.Entities.LectureTheatre", "LectureTheatre")
                        .WithMany("Lectures")
                        .HasForeignKey("LectureTheatreId")
                        .HasConstraintName("FK_Lectures_LectureTheatre_LectureTheatreId");

                    b.HasOne("LecturerManagement.Domain.Entities.Subject", "Subject")
                        .WithMany("Lectures")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_Lectures_Subject_SubjectId");
                });
#pragma warning restore 612, 618
        }
    }
}
